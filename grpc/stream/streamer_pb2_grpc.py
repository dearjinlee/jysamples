# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import streamer_pb2 as streamer__pb2


class StreamerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Send = channel.stream_unary(
        '/Streamer/Send',
        request_serializer=streamer__pb2.SendRequest.SerializeToString,
        response_deserializer=streamer__pb2.Reply.FromString,
        )
    self.Receive = channel.unary_stream(
        '/Streamer/Receive',
        request_serializer=streamer__pb2.ReceiveRequest.SerializeToString,
        response_deserializer=streamer__pb2.ReceiveResponse.FromString,
        )
    self.Communicate = channel.stream_stream(
        '/Streamer/Communicate',
        request_serializer=streamer__pb2.CommunicateRequest.SerializeToString,
        response_deserializer=streamer__pb2.CommunicateResponse.FromString,
        )


class StreamerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Send(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Receive(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Communicate(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StreamerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Send': grpc.stream_unary_rpc_method_handler(
          servicer.Send,
          request_deserializer=streamer__pb2.SendRequest.FromString,
          response_serializer=streamer__pb2.Reply.SerializeToString,
      ),
      'Receive': grpc.unary_stream_rpc_method_handler(
          servicer.Receive,
          request_deserializer=streamer__pb2.ReceiveRequest.FromString,
          response_serializer=streamer__pb2.ReceiveResponse.SerializeToString,
      ),
      'Communicate': grpc.stream_stream_rpc_method_handler(
          servicer.Communicate,
          request_deserializer=streamer__pb2.CommunicateRequest.FromString,
          response_serializer=streamer__pb2.CommunicateResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Streamer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
